let express,dbConfig,ioConfig,configMiddlewares,cors,https,http,SocketIO,routeCreator;_628‍.x([["io",()=>io]]);_628‍.w("express",[["default",["express"],function(v){express=v}]]);_628‍.w("./config/db",[["default",["dbConfig"],function(v){dbConfig=v}]]);_628‍.w("./config/ioConfig",[["default",["ioConfig"],function(v){ioConfig=v}]]);_628‍.w("./config/middlewares",[["default",["configMiddlewares"],function(v){configMiddlewares=v}]]);_628‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_628‍.w("https",[["default",["https"],function(v){https=v}]]);_628‍.w("http",[["default",["http"],function(v){http=v}]]);_628‍.w("socket.io",[["default",["SocketIO"],function(v){SocketIO=v}]]);_628‍.w("./lib/index",[["routeCreator",["routeCreator"],function(v){routeCreator=v}]]);










// use port from env or 4000 if it doesn't exist. feel free to change
const port = process.env.PORT || 4000
const app = express()

// add your cors
app.use( cors())

dbConfig(app)
configMiddlewares(app)

app.use(routeCreator())

const server = http.Server(app)
       const io = new SocketIO(server)

ioConfig(io)

// inserts io to each route/to the app params
// const { io } = req.app
app.io = io

server.listen(port, () => console.log(`App listening on port ${port}`));
