/// <reference path="../../declarations.d.ts" />
import { AbstractLevelDOWN, AbstractIteratorOptions, ErrorCallback } from 'abstract-leveldown';
import { RawGroup, IKeyPair, ICrypto } from './types';
declare module 'levelup' {
    interface LevelUp {
        clear(options?: AbstractIteratorOptions): Promise<void>;
        clear(options?: AbstractIteratorOptions, callback?: ErrorCallback): void;
    }
}
export interface RetrieveOptions {
    ticketCount?: number;
    epochNumber?: number;
}
export interface GroupLocalStorageConstructorParams {
    identity: string;
    leveldown: AbstractLevelDOWN;
    virgilCrypto: ICrypto;
}
export declare class GroupLocalStorage {
    private _db;
    private _encryptionLevel;
    constructor({ identity, virgilCrypto, leveldown }: GroupLocalStorageConstructorParams);
    store(rawGroup: RawGroup): Promise<void>;
    retrieve(sessionId: string, options: RetrieveOptions): Promise<RawGroup | null>;
    delete(sessionId: string): Promise<void>;
    reset(): Promise<void>;
    setEncryptionKeyPair(keyPair: IKeyPair): void;
    private retrieveGroupInfo;
    private retrieveNLastTickets;
    private retrieveTicketByEpochNumber;
    private getTicketKey;
}
